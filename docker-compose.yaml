services: 
  app:
    container_name: app
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - "./:/app"
      - .:/app
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    working_dir: /app
    command: 
      - /bin/bash
      - -c
      - |
        composer install
        if [ ! -f .env ]; then cp .env.example .env; fi
        php artisan key:generate
        php artisan storage:link
        chown www-data:www-data -R storage
        chmod 755 -R storage
        php artisan serve --host=0.0.0.0 --port=8000
    networks:
      - laravel_network_app
    ports:
      - 8090:8000
  mysql:
    # image: mysql:8.0
    container_name: mysql
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    ports: 
        - "3307:3306"
    env_file:
      - ./docker/mysql/.env_mysql
    volumes:
        - ./dump:/docker-entrypoint-initdb.d
        - app_laravel_volume:/var/lib/mysql
        - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
        - laravel_network_app
  pma:
    container_name: pma
    image: phpmyadmin/phpmyadmin
    depends_on:
      - mysql
    ports:
      - "8085:80"
    env_file:
      - ./docker/mysql/.env_pma
    networks:
      - laravel_network_app
volumes:
    app_laravel_volume:
networks:
  laravel_network_app:
    name: laravel_network_app
    driver: bridge